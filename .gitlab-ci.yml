image: docker:latest

stages:
- build
- modify-deploy-repo

variables:
  PR_BRANCH: "update-deployment-${CI_COMMIT_SHA}-${CI_CONCURRENT_PROJECT_ID}"

build-staging:
  stage: build
  except:
  - tags
  services:
  - docker:dind
  variables:
    AWS_ACCESS_KEY_ID: ${NON_PROD_AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${NON_PROD_AWS_SECRET_ACCESS_KEY}
  script:
  - apk add --no-cache curl jq python py-pip
  - pip install awscli
  - $(aws ecr get-login --no-include-email --region eu-west-1)
  - docker build -t ${STAGING_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
  - docker push ${STAGING_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
  - cat $STAGING_GCP_TOKEN | docker login -u _json_key --password-stdin https://gcr.io
  - docker tag ${STAGING_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} ${STAGING_GCP_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
  - docker push ${STAGING_GCP_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}

build-tag:
  stage: build
  only:
  - tags
  services:
  - docker:dind
  variables:
    AWS_ACCESS_KEY_ID: ${PROD_AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${PROD_AWS_SECRET_ACCESS_KEY}
  script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region eu-west-1)
    - docker build -t ${PROD_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG} .
    - docker push ${PROD_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
    - cat $PROD_GCP_TOKEN | docker login -u _json_key --password-stdin https://gcr.io
    - docker tag ${PROD_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG} ${PROD_GCP_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
    - docker push ${PROD_GCP_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}

push-staging-k8s:
  image: alantang888/kubectl_git:0.4
  stage: modify-deploy-repo
  except:
  - tags
  script:
  - mkdir -p ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - eval `ssh-agent -s`
  - chmod 600 $CI_RUNNER_SSH_PRIVATE
  - ssh-add $CI_RUNNER_SSH_PRIVATE
  - git clone git@gitlab.com:calipsa/kubernetes-infrastructure-staging.git
  - cd kubernetes-infrastructure-staging
  - yq w -i kubernetes/${CI_PROJECT_NAME}/deployment.yaml spec.template.spec.containers[0].image ${STAGING_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
  - git add kubernetes/${CI_PROJECT_NAME}/deployment.yaml
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - git commit -m "Update ${CI_PROJECT_NAME} image to ${CI_COMMIT_SHA}"
  - git push

push-staging-k8s-github:
  image: alantang888/kubectl_git:0.4
  stage: modify-deploy-repo
  except:
  - tags
  script:
  - mkdir -p ~/.ssh
  - ssh-keyscan github.com >> ~/.ssh/known_hosts
  - eval `ssh-agent -s`
  - chmod 600 $CI_RUNNER_SSH_PRIVATE
  - ssh-add $CI_RUNNER_SSH_PRIVATE
  - git clone git@github.com:calipsa/kubernetes-infrastructure-staging.git
  - cd kubernetes-infrastructure-staging
  - yq w -i kubernetes/${CI_PROJECT_NAME}/deployment.yaml spec.template.spec.containers[0].image ${STAGING_GCP_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_SHA}
  - git add kubernetes/${CI_PROJECT_NAME}/deployment.yaml
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - git commit -m "Update ${CI_PROJECT_NAME} image to ${CI_COMMIT_SHA}"
  - git push

push-qa-k8s:
  image: alantang888/kubectl_git:0.4
  stage: modify-deploy-repo
  only:
  - tags
  script:
  - mkdir -p ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - eval `ssh-agent -s`
  - chmod 600 $CI_RUNNER_SSH_PRIVATE
  - ssh-add $CI_RUNNER_SSH_PRIVATE
  - git clone git@gitlab.com:calipsa/kubernetes-infrastructure-qa.git
  - cd kubernetes-infrastructure-qa
  - yq w -i kubernetes/${CI_PROJECT_NAME}/deployment.yaml spec.template.spec.containers[0].image ${STAGING_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
  - git add kubernetes/${CI_PROJECT_NAME}/deployment.yaml
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - git commit -m "Update ${CI_PROJECT_NAME} image to ${CI_COMMIT_TAG}"
  - git push

push-qa-k8s-github:
  image: alantang888/kubectl_git:0.4
  stage: modify-deploy-repo
  only:
  - tags
  script:
  - mkdir -p ~/.ssh
  - ssh-keyscan github.com >> ~/.ssh/known_hosts
  - eval `ssh-agent -s`
  - chmod 600 $CI_RUNNER_SSH_PRIVATE
  - ssh-add $CI_RUNNER_SSH_PRIVATE
  - git clone git@github.com:calipsa/kubernetes-infrastructure-qa.git
  - cd kubernetes-infrastructure-qa
  - yq w -i kubernetes/${CI_PROJECT_NAME}/deployment.yaml spec.template.spec.containers[0].image ${STAGING_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
  - git add kubernetes/${CI_PROJECT_NAME}/deployment.yaml
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - git commit -m "Update ${CI_PROJECT_NAME} image to ${CI_COMMIT_TAG}"
  - git push

create-mr-to-prod-k8s:
  image: alantang888/kubectl_git:0.4
  stage: modify-deploy-repo
  variables:
    COMMIT_MSG: "Update ${CI_PROJECT_NAME} image to ${CI_COMMIT_TAG}"
  only:
  - tags
  script:
  - mkdir -p ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - eval `ssh-agent -s`
  - chmod 600 $CI_RUNNER_SSH_PRIVATE
  - ssh-add $CI_RUNNER_SSH_PRIVATE
  - git clone git@gitlab.com:calipsa/kubernetes-infrastructure-production.git
  - cd kubernetes-infrastructure-production
  - yq w -i kubernetes/${CI_PROJECT_NAME}/deployment.yaml spec.template.spec.containers[0].image ${STAGING_DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
  - git add kubernetes/${CI_PROJECT_NAME}/deployment.yaml
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - git commit -m "${COMMIT_MSG}"
  - git push -u origin master:${PR_BRANCH}
  - |
    curl -H "Content-Type: application/json" -d "{\"id\": \"${CI_PROJECT_ID}\", \"source_branch\": \"${PR_BRANCH}\", \"target_branch\": \"master\", \"title\": \"${COMMIT_MSG}\"}" -X POST https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests